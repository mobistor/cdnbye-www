(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{500:function(t,e,a){"use strict";a.r(e);var n=a(4),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),a("p",[t._v("CDNBye implements "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/WebRTC",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebRTC"),a("OutboundLink")],1),t._v(" datachannel to scale live/vod video streaming by peer-to-peer network using bittorrent-like protocol.")]),t._v(" "),a("p",[t._v("To use CDNBye hlsjs-p2p-engine, WebRTC support is required (Chrome, Firefox, Opera, Safari).")]),t._v(" "),a("h2",{attrs:{id:"use-hls-js-wrapped-with-p2pengine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-hls-js-wrapped-with-p2pengine"}},[t._v("#")]),t._v(" Use Hls.js wrapped with P2PEngine")]),t._v(" "),a("h3",{attrs:{id:"hls-engineversion-static-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hls-engineversion-static-method"}},[t._v("#")]),t._v(" "),a("code",[t._v("Hls.engineVersion")]),t._v(" (static method)")]),t._v(" "),a("p",[t._v("Show the current version of CDNBye plugin.")]),t._v(" "),a("h3",{attrs:{id:"hls-webrtc-support-static-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hls-webrtc-support-static-method"}},[t._v("#")]),t._v(" "),a("code",[t._v("Hls.WEBRTC_SUPPORT")]),t._v(" (static method)")]),t._v(" "),a("p",[t._v("Is WebRTC natively supported in the environment?")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Hls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WEBRTC_SUPPORT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WebRTC is supported")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use a fallback")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"create-instance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-instance"}},[t._v("#")]),t._v(" Create instance")]),t._v(" "),a("h3",{attrs:{id:"var-hls-new-hls-p2pconfig-opts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-hls-new-hls-p2pconfig-opts"}},[t._v("#")]),t._v(" "),a("code",[t._v("var hls = new Hls({p2pConfig: [opts]});")])]),t._v(" "),a("p",[t._v("Create a new "),a("code",[t._v("Hls")]),t._v(" instance.")]),t._v(" "),a("h3",{attrs:{id:"var-engine-hls-p2pengine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-engine-hls-p2pengine"}},[t._v("#")]),t._v(" "),a("code",[t._v("var engine = hls.p2pEngine;")])]),t._v(" "),a("p",[t._v("Get the "),a("code",[t._v("P2PEngine")]),t._v(" instance from "),a("code",[t._v("Hls")]),t._v(" instance.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("opts")]),t._v(" is specified, then the default options (shown below) will be overridden.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("Field")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Default")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("logLevel")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string or boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'none'")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Print log level(warn, error, noneï¼Œfalse=none, true=warn).")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("live")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("tell engine whether in live or VOD mode, set to false will pre-buffer for smooth playing.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("wsSignalerAddr")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'wss://signal.cdnbye.com'")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("The address of signal server.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("announce")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("'https://tracker.cdnbye.com/v1'")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("The address of tracker server.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("wsMaxRetries")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("The maximum number of reconnection attempts that will be made by websocket before giving up.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("wsReconnectInterval")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("30")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("The number of seconds to delay before attempting to reconnect by websocket.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("memoryCacheLimit")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v('{"pc": 1024 * 1024 * 512, "mobile": 1024 * 1024 * 256}')]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("The max size of binary data that can be stored in the cache.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("p2pEnabled")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("true")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Enable or disable p2p engine.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("wifiOnly")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Only allow uploading on Wi-Fi and Ethernet.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("dcDownloadTimeout")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Max download timeout for WebRTC datachannel.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("webRTCConfig")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Object")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("{}")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("A "),a("a",{attrs:{href:"https://github.com/feross/simple-peer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuration dictionary"),a("OutboundLink")],1),t._v(" providing options to configure WebRTC connections.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("useHttpRange")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Use HTTP ranges requests where it is possible. Allows to continue (and not start over) aborted P2P downloads over HTTP(True in live mode by default).")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("getStats")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Get the downloading statistics, including totalP2PDownloaded, totalP2PUploaded and totalHTTPDownloaded.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("getPeerId")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Emitted when the peer Id of this client is obtained from server.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("getPeersInfo")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Emitted when successfully connected with new peer.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("channelId")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Pass a function to generate channel Id.(See advanced usage)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("validateSegment")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("function")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Pass a function to check segment validity downloaded from peers.")])])])]),t._v(" "),a("h2",{attrs:{id:"p2pengine-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p2pengine-api"}},[t._v("#")]),t._v(" P2PEngine API")]),t._v(" "),a("h3",{attrs:{id:"p2pengine-version-static-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p2pengine-version-static-method"}},[t._v("#")]),t._v(" "),a("code",[t._v("P2PEngine.version")]),t._v(" (static method)")]),t._v(" "),a("p",[t._v("Get the version of "),a("code",[t._v("P2PEngine")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"p2pengine-issupported-static-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p2pengine-issupported-static-method"}},[t._v("#")]),t._v(" "),a("code",[t._v("P2PEngine.isSupported()")]),t._v(" (static method)")]),t._v(" "),a("p",[t._v("Returns true if WebRTC data channel is supported by the browser.")]),t._v(" "),a("h3",{attrs:{id:"var-engine-new-p2pengine-hlsjs-p2pconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-engine-new-p2pengine-hlsjs-p2pconfig"}},[t._v("#")]),t._v(" "),a("code",[t._v("var engine = new P2PEngine(hlsjs, p2pConfig);")])]),t._v(" "),a("p",[t._v("Create a new "),a("code",[t._v("P2PEngine")]),t._v(" instance. Or you can get "),a("code",[t._v("P2PEngine")]),t._v(" instance from hlsjs:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" engine "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p2pEngine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"engine-enablep2p"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#engine-enablep2p"}},[t._v("#")]),t._v(" "),a("code",[t._v("engine.enableP2P()")])]),t._v(" "),a("p",[t._v("Resume P2P if it has been stopped.")]),t._v(" "),a("h3",{attrs:{id:"engine-disablep2p"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#engine-disablep2p"}},[t._v("#")]),t._v(" "),a("code",[t._v("engine.disableP2P()")])]),t._v(" "),a("p",[t._v("Disable engine to stop p2p and free used resources.")]),t._v(" "),a("h3",{attrs:{id:"engine-destroy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#engine-destroy"}},[t._v("#")]),t._v(" "),a("code",[t._v("engine.destroy()")])]),t._v(" "),a("p",[t._v("Stop p2p and free used resources, it will be called automatically before hls.js is destroyed.")]),t._v(" "),a("h2",{attrs:{id:"p2pengine-events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#p2pengine-events"}},[t._v("#")]),t._v(" P2PEngine Events")]),t._v(" "),a("h3",{attrs:{id:"engine-on-peerid-function-peerid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-peerid-function-peerid"}},[t._v("#")]),t._v(" "),a("code",[t._v("engine.on('peerId', function (peerId) {})")])]),t._v(" "),a("p",[t._v("Emitted when the peer Id of this client is obtained from server.")]),t._v(" "),a("h3",{attrs:{id:"engine-on-peers-function-peers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-peers-function-peers"}},[t._v("#")]),t._v(" "),a("code",[t._v("engine.on('peers', function (peers) {})")])]),t._v(" "),a("p",[t._v("Emitted when successfully connected with new peer.")]),t._v(" "),a("h3",{attrs:{id:"engine-on-stats-function-stats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#engine-on-stats-function-stats"}},[t._v("#")]),t._v(" "),a("code",[t._v("engine.on('stats', function (stats) {})")])]),t._v(" "),a("p",[t._v("Emitted when data is downloaded/uploaded."),a("br"),t._v("\nstats.totalHTTPDownloaded: total data downloaded by HTTP(KB)."),a("br"),t._v("\nstats.totalP2PDownloaded: total data downloaded by P2P(KB)."),a("br"),t._v("\nstats.totalP2PUploaded: total data uploaded by P2P(KB).")]),t._v(" "),a("h2",{attrs:{id:"advanced-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-usage"}},[t._v("#")]),t._v(" Advanced Usage")]),t._v(" "),a("h3",{attrs:{id:"another-way-to-get-the-downloading-statistics"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#another-way-to-get-the-downloading-statistics"}},[t._v("#")]),t._v(" Another way to get the downloading statistics")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getStats")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("totalP2PDownloaded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" totalP2PUploaded"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" totalHTTPDownloaded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"another-way-to-get-peer-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#another-way-to-get-peer-id"}},[t._v("#")]),t._v(" Another way to get peer Id")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPeerId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("peerId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"another-way-to-get-peers-information"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#another-way-to-get-peers-information"}},[t._v("#")]),t._v(" Another way to get peers information")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getPeersInfo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("peers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"dynamic-m3u8-path-issue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-m3u8-path-issue"}},[t._v("#")]),t._v(" Dynamic m3u8 path issue")]),t._v(" "),a("p",[t._v("Some m3u8 urls play the same live/vod but have different paths on them. For example,\nexample.com/clientId1/file.m3u8 and example.com/clientId2/file.m3u8. In this case, you can format a common channelId for them. "),a("code",[t._v("It is strongly recommended to add a unique identifier to the channelid to prevent conflicts with other channels. If there's a collision, our backend is going to match peers that aren't watching the same content together, and that can lead to unpredictable results.")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("channelId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("m3u8Url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" formatedUrl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YOUR_UNIQUE_ID'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m3u8Url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// format a channelId by removing the different part")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" formatedUrl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v(" "),a("h3",{attrs:{id:"config-stun-servers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#config-stun-servers"}},[t._v("#")]),t._v(" Config STUN Servers")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    webRTCConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n        config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// custom webrtc configuration (used by RTCPeerConnection constructor)")]),t._v("\n            iceServers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" urls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stun:stun.l.google.com:19302'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" urls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stun:global.stun.twilio.com:3478?transport=udp'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"allow-http-range-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#allow-http-range-request"}},[t._v("#")]),t._v(" Allow Http Range Request")]),t._v(" "),a("p",[t._v("If http range request is activated, we are able to get chunks of data from peer and then complete the segments by getting other chunks from the CDN, thus, reducing your CDN bandwidth. To activate range requests, See "),a("RouterLink",{attrs:{to:"/en/views/m3u8.html#allow-http-range-request"}},[t._v("Allow Http Range Request")]),t._v(". Besides, the code below is neededï¼š")],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    useHttpRange"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"how-to-check-segment-validity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-check-segment-validity"}},[t._v("#")]),t._v(" How to Check Segment Validity")]),t._v(" "),a("p",[t._v("Sometimes we need to prevent a peer from sending a fake segment\n(such as the bittorrent with a hash function).\nCDNBye provides a validation callback with buffer of the\ndownloaded segment, developer should implement the actual\nvalidator. For example, you can create a program that generates\nhashes for the segments and stores them in a specific file or\ninjects into m3u8 playlist files the hashes information. If\nthe callback returns false, then the segment is not valid.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("p2pConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("validateSegment")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hashFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("md5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"online-debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#online-debugging"}},[t._v("#")]),t._v(" Online Debugging")]),t._v(" "),a("p",[t._v("CDNBye provides two query parameters for online debugging:")]),t._v(" "),a("ul",[a("li",[t._v("You can display the log information in console by adding a query parameter "),a("code",[t._v("_debug=1")]),t._v(" to the url, such as "),a("code",[t._v("http://your_website.com?_debug=1")]),t._v(".")]),t._v(" "),a("li",[t._v("In the case that P2P has been enabled, to temporarily disable P2P, you can add query parameter "),a("code",[t._v("_p2p=0")]),t._v(" to the url, such as "),a("code",[t._v("http://your_website.com?_p2p=0")]),t._v(".")])])])}),[],!1,null,null,null);e.default=s.exports}}]);